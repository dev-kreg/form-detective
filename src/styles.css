/* You can add global styles to this file, and also import other style files */

:root {
    --terminal-green: #a1eeae;
    --terminal-red: #ff8f8f;
    --terminal-bg: #0a0a0a;
    overflow: hidden;
}

app-root {
    height: 100vh;
    width: 100vw;
    display: block;
}

body {
    background-color: var(--terminal-bg);
    color: var(--terminal-green);
    font-family: 'Courier New', monospace;
    line-height: 1.6;
    margin: 0;
    padding: 0px;
    text-shadow: 0 0 5px var(--terminal-green);
}

h1,
h2,
h3 {
    margin: 0;
}

input,
textarea,
button {
    background-color: var(--terminal-bg);
    border: 0;
    border-bottom: 1px solid var(--terminal-green);
    color: var(--terminal-green);
    font-family: 'Courier New', monospace;
    padding: 8px;
    min-width: 100px;
    /* min-height: 47px;
    width: min-content;
    width: min-content; */
}
button.btn-loading:hover {
    background-color: var(--terminal-bg);
    color: var(--terminal-green);
    cursor: unset;
}
button:hover {
    background-color: var(--terminal-green);
    color: var(--terminal-bg);
    cursor: pointer;
}

@keyframes shimmer {
    0% { background-position:  100%; }
  100% { background-position: -100%; }
}

button.btn-loading {
  animation: 3s cubic-bezier(.25,.50,.75,.50) infinite shimmer;
  background-image: linear-gradient(to right, 
    rgba(0,0,0,.00)   0%, 
    var(--terminal-green)  25%, 
    rgba(0,0,0,.00)  50%, 
    var(--terminal-green)  75%, 
    rgba(0,0,0,.00) 100%
  );
  background-size: 200%;
}

input:focus,
textarea:focus,
button:focus {
    outline: none;
}

/* CRT screen effect */
body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(0deg,
            rgba(0, 0, 0, 0.15),
            rgba(0, 0, 0, 0.15) 1px,
            transparent 1px,
            transparent 2px);
    pointer-events: none;
}

/* Error styling */
.error {
    color: var(--terminal-red);
    text-shadow: 0 0 5px var(--terminal-red);
    animation: errorBlink 1s ease-in-out infinite;
}

@keyframes errorBlink {

    0%,
    100% {
        opacity: 1;
    }

    50% {
        opacity: 0.7;
    }
}

.terminal-text {
    animation: glitch-in 0.25s steps(5, end) forwards;
    opacity: 0;
}

@keyframes glitch-in {
    0% {
        opacity: 0;
        transform: translateY(-5px) skewX(5deg);
        filter: brightness(2);
    }

    25% {
        opacity: 0.3;
        transform: translateY(3px) skewX(-3deg);
    }

    50% {
        opacity: 0.7;
        transform: translateY(-3px);
        filter: brightness(1.5);
    }

    100% {
        opacity: 1;
        transform: none;
    }
}
